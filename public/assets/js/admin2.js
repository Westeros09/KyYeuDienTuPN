const firebaseConfig = {
    apiKey: "AIzaSyCo3wgNxCadkszkEP6ymnjFi4HIvVVktbU",
    authDomain: "kyyeu-phunhuan.firebaseapp.com",
    projectId: "kyyeu-phunhuan",
    storageBucket: "kyyeu-phunhuan.firebasestorage.app",
    messagingSenderId: "440890277287",
    appId: "1:440890277287:web:f00fcf9b017978f94c4a82",
    measurementId: "G-JVX3GKQ32P"
};

firebase.initializeApp(firebaseConfig);
const db = firebase.firestore();

const phongBanMap = {
    "bch": "Ban Ch·ªâ huy",
    "tm": "Ban Tham m∆∞u",
    "ct": "Ban Ch√≠nh Tr·ªã",
    "hckt": "Ban H·∫≠u c·∫ßn-K·ªπ thu·∫≠t",
    "dqtv": "D√¢n qu√¢n t·ª± v·ªá",
    "khac": "Kh√°c"
};

document.addEventListener("DOMContentLoaded", function () {
    loadDataTable();
});




function loadDataTable() {

    db.collection("thongtin").orderBy("thoigian", "desc").get().then((querySnapshot) => {
        const dataSet = [];

        querySnapshot.forEach((doc) => {
            const data = doc.data();
            const docId = doc.id;
            const tenPhongBan = phongBanMap[data.phongban] || data.phongban;
            dataSet.push([
                data.hoten || '',
                data.noilam || '',
                data.capbac || 'N/A',
                tenPhongBan || '',
                data.chucvu || '',
                `
                    <button type="button" class="btn btn-sm btn-primary edit-btn" data-id="${docId}" data-toggle="modal" data-target="#exampleModal">
                        S·ª≠a
                    </button>
                    <button class="btn btn-sm btn-danger delete-btn" data-id="${docId}">X√≥a</button>
                `,
            ]);
        });

        $('#dataTable').DataTable({
            data: dataSet,
            columns: [
                { title: "H·ªç t√™n" },
                { title: "N∆°i l√†m" },
                { title: "C·∫•p b·∫≠c" },
                { title: "Ph√≤ng ban" },
                { title: "Ch·ª©c v·ª•" },
                { title: "H√†nh ƒë·ªông", orderable: false, searchable: false }
            ],
            destroy: true
        });
    }).catch(error => {
        console.error("L·ªói khi load d·ªØ li·ªáu:", error);
    });
}

document.addEventListener("click", function (event) {
    if (event.target && event.target.classList.contains("edit-btn")) {
        const docId = event.target.getAttribute("data-id");
        document.getElementById("docIdEditing").value = docId;

        db.collection("thongtin").doc(docId).get().then((doc) => {
            if (doc.exists) {
                const data = doc.data();
                document.getElementById("hoten").value = data.hoten || "";
                document.getElementById("noilam").value = data.noilam || "";
                document.getElementById("capbac").value = data.capbac || "";
                document.getElementById("chucvu").value = data.chucvu || "";
                document.getElementById("phongban").value = data.phongban || "";
                document.getElementById("tamtinh").value = data.tamtinh || "";

                if (data.hinhanh) {
                    document.getElementById("previewImage").src = data.hinhanh;
                    document.getElementById("previewImage").style.display = "block";

                } else {
                    document.getElementById("previewImage").style.display = "none";

                }
                // üëá Hi·ªÉn th·ªã modal sau khi d·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c g√°n
                $('#exampleModal').modal('show');
            }
            else {
                alert("Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu.");
            }
        });
    }
});


//======================================================================================================
//=============================================ADD & UPDATE=============================================

const imageInput = document.getElementById('imageUpload');
const preview = document.getElementById('previewImage');

imageInput.addEventListener('change', function (event) {
    const file = event.target.files[0];
    if (file) {
        const reader = new FileReader();
        reader.onload = function (e) {
            preview.src = e.target.result;
            preview.style.display = 'block';
        };
        reader.readAsDataURL(file);
    } else {
        preview.src = '#';
        preview.style.display = 'none';
    }
});



function luuDuLieu() {
    const docId = document.getElementById("docIdEditing").value || null;
    const noilam = document.getElementById("noilam").value;
    const hoten = document.getElementById("hoten").value;
    const capbac = document.getElementById("capbac").value;
    const chucvu = document.getElementById("chucvu").value;
    const phongban = document.getElementById("phongban").value;
    const tamtinh = document.getElementById("tamtinh").value;

    const fileInput = document.getElementById("imageUpload");
    const file = fileInput.files[0];

    if (file) {
        const formData = new FormData();
        formData.append("file", file);
        formData.append("upload_preset", "KyYeuPN");
        let rawName = file.name.split('.').slice(0, -1).join('.');
        rawName = rawName
            .trim()
            .replace(/\s+/g, '-')

        const now = new Date();
        const ngay = String(now.getDate()).padStart(2, '0');
        const thang = String(now.getMonth() + 1).padStart(2, '0');
        const nam = now.getFullYear();

        const dateString = `${ngay}${thang}${nam}`;
        formData.append("public_id", `${rawName}-${dateString}`);
        // formData.append("public_id", rawName);
        // formData.append("overwrite", "true");

        fetch("https://api.cloudinary.com/v1_1/dn7svhgyv/image/upload", {
            method: "POST",
            body: formData
        })
            .then(res => res.json())
            .then(data => {
                const imageUrl = data.secure_url;
                luuVaoFirestore(docId, noilam, hoten, capbac, chucvu, phongban, tamtinh, imageUrl);
            })
            .catch(error => {
                console.error("‚ùå Upload ·∫£nh th·∫•t b·∫°i:", error);
                alert("Upload ·∫£nh th·∫•t b·∫°i, d·ªØ li·ªáu ch∆∞a ƒë∆∞·ª£c l∆∞u.");
            });
    } else {
        const previewImage = document.getElementById("previewImage");
        // const imageUrl = previewImage && previewImage.src !== "#" ? previewImage.src : null;
        const imageUrl = (previewImage && previewImage.src && !previewImage.src.endsWith("#")) ? previewImage.src : null;
        luuVaoFirestore(docId, noilam, hoten, capbac, chucvu, phongban, tamtinh, imageUrl);
    }
}


function resetForm() {
    document.getElementById("imageUpload").value = "";
    const preview = document.getElementById("previewImage");
    preview.src = "#";
    preview.style.display = "none";
    document.getElementById("hoten").value = "";
    document.getElementById("capbac").value = "";
    document.getElementById("chucvu").value = "";
    document.getElementById("phongban").selectedIndex = 0;
    document.getElementById("noilam").selectedIndex = 0;
    document.getElementById("docIdEditing").value = "";
}

function luuVaoFirestore(docId, noilam, hoten, capbac, chucvu, phongban, tamtinh, imageUrl) {
    const data = {
        noilam,
        hoten,
        capbac: capbac || null,
        chucvu,
        phongban,
        tamtinh: tamtinh || null,
        hinhanh: imageUrl || null,
        thoigian: firebase.firestore.FieldValue.serverTimestamp()
    };

    if (!docId) {
        // Tr∆∞·ªùng h·ª£p th√™m m·ªõi ‚Üí ki·ªÉm tra tr√πng
        db.collection("thongtin")
            .where("hoten", "==", hoten)
            .where("noilam", "==", noilam)
            .where("capbac", "==", capbac)
            .get()
            .then(querySnapshot => {
                if (!querySnapshot.empty) {
                    alert("‚ùóTh√†nh vi√™n ƒë√£ t·ªìn t·∫°i (tr√πng h·ªç t√™n, n∆°i l√†m v√† c·∫•p b·∫≠c)!");
                    return;
                }

                // Kh√¥ng tr√πng ‚Üí ti·∫øn h√†nh th√™m
                db.collection("thongtin")
                    .add(data)
                    .then(() => {
                        alert("‚úÖ Th√™m m·ªõi th√†nh c√¥ng!");
                        loadDataTable();
                        resetForm();
                    })
                    .catch(error => {
                        console.error("‚ùå L·ªói Firestore:", error);
                        alert("Th√™m m·ªõi th·∫•t b·∫°i!");
                    });
            })
            .catch(error => {
                console.error("‚ùå L·ªói ki·ªÉm tra tr√πng:", error);
                alert("L·ªói khi ki·ªÉm tra d·ªØ li·ªáu tr√πng!");
            });
    } else {
        // Tr∆∞·ªùng h·ª£p c·∫≠p nh·∫≠t
        db.collection("thongtin")
            .doc(docId)
            .update(data)
            .then(() => {
                alert("‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng!");
                loadDataTable();
                resetForm();
            })
            .catch(error => {
                console.error("‚ùå L·ªói Firestore:", error);
                alert("C·∫≠p nh·∫≠t th·∫•t b·∫°i!");
            });
    }

    // const action = docId
    //     ? db.collection("thongtin").doc(docId).update(data)
    //     : db.collection("thongtin").add(data);

    // action
    //     .then(() => {
    //         alert(docId ? "‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng!" : "‚úÖ Th√™m m·ªõi th√†nh c√¥ng!");
    //         loadDataTable();
    //         resetForm();
    //     })
    //     .catch(error => {
    //         console.error("‚ùå L·ªói Firestore:", error);
    //         alert(docId ? "C·∫≠p nh·∫≠t th·∫•t b·∫°i!" : "Th√™m m·ªõi th·∫•t b·∫°i!");
    //     });
}




//==========================================CN X√ìA===========================================
//===========================================================================================

document.addEventListener("click", function (event) {
    if (event.target && event.target.classList.contains("delete-btn")) {
        const docId = event.target.getAttribute("data-id");
        if (confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a kh√¥ng?")) {
            db.collection("thongtin").doc(docId).delete()
                .then(() => {
                    alert("ƒê√£ x√≥a th√†nh c√¥ng!");
                    location.reload(); // Ho·∫∑c g·ªçi h√†m load l·∫°i b·∫£ng n·∫øu c√≥
                })
                .catch((error) => {
                    console.error("L·ªói khi x√≥a t√†i li·ªáu:", error);
                    alert("C√≥ l·ªói x·∫£y ra khi x√≥a.");
                });
        }
    }
});



